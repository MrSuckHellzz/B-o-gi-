<%- include('partials/header') %>
<main>
    <h1 class="main-title text-center m-3 color"><strong>Các nhóm hàng</strong></h1>

    <div class="category-form-container">
        <input class="search-app-input" type="search" id="liveSearch" placeholder="Tìm kiếm nhóm hàng..." aria-label="Tìm Kiếm">
        <h3 id="form-button">&#x2795; Thêm nhóm hàng</h3>
    </div>

    <form id="category-form" method="POST" action="/category">
        <label for="categoryName" class="form-label me-2">Tên nhóm hàng:</label>
        <input type="text" class="form-control me-2 border-black" id="categoryName" name="categoryName" required>
        <label for="categoryDescription" class="form-label me-2">Mô tả:</label>
        <textarea class="form-control me-2 border-black" id="categoryDescription" name="categoryDescription" rows="5" required></textarea>
        <label for="categoryImage" class="form-label me-2">URL hình ảnh:</label>
        <input type="text" class="form-control me-2 border-black" id="categoryImage" name="categoryImage">
        <button type="submit" class="submit-button">Thêm</button>
    </form>

    <hr>

    <!--No result message-->
    <div id="no-results">
        Không tìm thấy nhóm hàng nào phù hợp với "<span id="search-term"></span>"
    </div>

    <div class="category-list">
        <% categories.forEach(category => { %>
            <div class="category-card" data-name="<%= category.name.toLowerCase() %>">
                <a href="/product/<%= category._id %>" class="category-link">
                    <div class="category-item">
                        <div class="first-column">
                            <h3><%= category.name %></h3>
                            <% if (category.image) { %>
                                <img src="<%= category.image %>" alt="Category Image">
                            <% } else { %>
                                <img src="/placeholder.png" alt="No Image Available">
                            <% } %>
                        </div>
                        <div class="second-column">
                            <p><%= category.description %></p>
                        </div>
                    </div>
                </a>
                <div class="category-actions">
                    <form method="POST" action="/category/delete/<%= category._id %>" onsubmit="return confirm('Bạn có chắc chắn muốn xóa nhóm hàng này không?');">
                        <button type="submit" class="delete-button">&#10060; Xóa</button>
                    </form>
                    <button class="category-edit-button" data-bs-target="#category-fixing-<%= category._id %>" data-bs-toggle="modal" data-bs-dismiss="modal">&#9998; Sửa</button>
                    <div id="category-fixing-<%= category._id %>" class="modal fade" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Thay đổi nhóm hàng</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form method="POST" action="/category/update/<%= category._id %>">
                                        <div class="mb-3">
                                            <label for="categoryName" class="form-label">Tên nhóm hàng:</label>
                                            <input type="text" class="form-control border-black" id="categoryName" name="categoryName" value="<%= category.name %>" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="categoryDescription" class="form-label">Mô tả:</label>
                                            <textarea class="form-control border-black" id="categoryDescription" name="categoryDescription" rows="5" required><%= category.description %></textarea>
                                        </div>
                                        <div class="mb-3">
                                            <label for="categoryImage" class="form-label">URL hình ảnh:</label>
                                            <input type="text" class="form-control border-black" id="categoryImage" name="categoryImage" value="<%= category.image %>">
                                        </div>
                                        <button type="submit" class="submit-button">Lưu thay đổi</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>
</main>
<script>
    // Save scroll position before form submissions
    function saveScrollPosition() {
        sessionStorage.setItem('scrollPosition', window.scrollY);
    }

    // Restore scroll position after page load
    window.addEventListener('load', function() {
        const savedPosition = sessionStorage.getItem('scrollPosition');
        if (savedPosition) {
            window.scrollTo(0, parseInt(savedPosition));
            sessionStorage.removeItem('scrollPosition');
        }
    });

    // Add event listeners to forms
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', saveScrollPosition);
    });
    
    //Toggle category form visibility
    let formButton = document.getElementById('form-button');
    let categoryForm = document.getElementById('category-form');
    
    formButton.addEventListener('click', () => {
        if (categoryForm.classList.contains('visible') === false) {
            categoryForm.classList.toggle('visible');
            formButton.innerHTML ="&#x2796; Ẩn biểu mẫu";
        } else {
            categoryForm.classList.toggle('visible');
            formButton.innerHTML ="&#x2795; Thêm nhóm hàng";
        }
    });

    // LIVE SEARCH FUNCTIONALITY
    const searchInput = document.getElementById('liveSearch');
    const noResults = document.getElementById('no-results');
    const searchTerm = document.getElementById('search-term');

    // Function to remove Vietnamese accents/diacritics
    function removeVietnameseAccents(text) {
        const vietnameseMap = {
            'à': 'a', 'á': 'a', 'ạ': 'a', 'ả': 'a', 'ã': 'a',
            'â': 'a', 'ầ': 'a', 'ấ': 'a', 'ậ': 'a', 'ẩ': 'a', 'ẫ': 'a',
            'ă': 'a', 'ằ': 'a', 'ắ': 'a', 'ặ': 'a', 'ẳ': 'a', 'ẵ': 'a',
            'è': 'e', 'é': 'e', 'ẹ': 'e', 'ẻ': 'e', 'ẽ': 'e',
            'ê': 'e', 'ề': 'e', 'ế': 'e', 'ệ': 'e', 'ể': 'e', 'ễ': 'e',
            'ì': 'i', 'í': 'i', 'ị': 'i', 'ỉ': 'i', 'ĩ': 'i',
            'ò': 'o', 'ó': 'o', 'ọ': 'o', 'ỏ': 'o', 'õ': 'o',
            'ô': 'o', 'ồ': 'o', 'ố': 'o', 'ộ': 'o', 'ổ': 'o', 'ỗ': 'o',
            'ơ': 'o', 'ờ': 'o', 'ớ': 'o', 'ợ': 'o', 'ở': 'o', 'ỡ': 'o',
            'ù': 'u', 'ú': 'u', 'ụ': 'u', 'ủ': 'u', 'ũ': 'u',
            'ư': 'u', 'ừ': 'u', 'ứ': 'u', 'ự': 'u', 'ử': 'u', 'ữ': 'u',
            'ỳ': 'y', 'ý': 'y', 'ỵ': 'y', 'ỷ': 'y', 'ỹ': 'y',
            'đ': 'd', 'Đ': 'D'
        };
        
        return text.toLowerCase().replace(/[àáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđĐ]/g, 
            function(match) {
                return vietnameseMap[match] || match;
            });
    }

    // Function to check if search terms match (accent-insensitive)
    function matchesSearch(categoryName, searchQuery) {
        // Remove accents from both strings
        const normalizedName = removeVietnameseAccents(categoryName);
        const normalizedQuery = removeVietnameseAccents(searchQuery.trim());
        
        if (normalizedQuery === '') return true; // Show all if no search
        
        // Split search query into individual words
        const searchWords = normalizedQuery.split(/\s+/);
        
        // Check if ALL search words are found in the category name
        return searchWords.every(word => normalizedName.includes(word));
    }

    searchInput.addEventListener('input', function() {
        const query = this.value.toLowerCase().trim();
        const categoryCards = document.querySelectorAll('.category-card');
        let visibleCount = 0;

        categoryCards.forEach(card => {
            const name = card.getAttribute('data-name');
            
            // Check if query matches name or description
            if (matchesSearch(name, query)) {
                card.style.display = 'grid';
                card.style.gridTemplateColumns = '4fr 1fr';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });

        // Show/hide "no results" message
        if (query === '') {
            noResults.style.display = 'none';
        } else if (visibleCount === 0) {
            noResults.style.display = 'block';
            searchTerm.textContent = query;
        } else {
            noResults.style.display = 'none';
        }
    });

</script>
<%- include('partials/footer') %>
